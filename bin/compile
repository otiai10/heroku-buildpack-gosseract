#!/usr/bin/env bash

# This is /bin/detect of heroku-buildpack-gosseract.
# `bin/compile`: Used to perform the transformation steps on the app.
# See https://devcenter.heroku.com/articles/buildpack-api#bin-compile

# 0) Variable regulations for heroku-buildpack-testrunner, Travis-CI, and Heroku 
BUILD_DIR=$1
if [ -z ${BUILD_DIR} ]; then
    BUILD_DIR=${HOME}/.build
    mkdir -p ${BUILD_DIR}
fi
CACHE_DIR=$2
if [ -z ${CACHE_DIR} ]; then
    CACHE_DIR=${HOME}/.cache
    mkdir -p ${CACHE_DIR}
fi

# 1) Set up for apt-get
#    Thanks to https://github.com/heroku/heroku-buildpack-apt/blob/master/bin/compile
APT_DESTINATION="${BUILD_DIR}/.apt/dest"
APT_CACHE_DIR="${CACHE_DIR}/.apt/cache"
APT_STATE_DIR="${CACHE_DIR}/.apt/state"
APT_SOURCES_DIR="${CACHE_DIR}/.apt/sources"
APT_SOURCES="${CACHE_DIR}/.apt/sources/sources.list"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR -o dir::etc::sourcelist=$APT_SOURCES"

rm -rf ${APT_CACHE_DIR}
rm -rf ${APT_STATE_DIR}
rm -rf ${APT_SOURCES_DIR}

mkdir -p ${APT_DESTINATION}
mkdir -p ${APT_CACHE_DIR}/archives/partial
mkdir -p ${APT_STATE_DIR}/lists/partial
mkdir -p ${APT_SOURCES_DIR}

# 2) Update packages
cat "/etc/apt/sources.list" > ${APT_SOURCES}
apt-get ${APT_OPTIONS} update

apt-get ${APT_OPTIONS} -y -d install \
    build-essential \
    libc6-dev \
    g++ \
    tesseract-ocr \
    tesseract-ocr-eng \
    libtesseract-dev \
    git

# 3) Install packages
for DEB in $(ls -1 ${APT_CACHE_DIR}/archives/*.deb); do
    echo "Installing $(basename ${DEB})"
    dpkg -x $DEB ${APT_DESTINATION}
done

# # 4) Set up environment variables
mkdir -p ${BUILD_DIR}/.profile.d
GOSSERACT_DEFAULT_PROFILE=${BUILD_DIR}/.profile.d/gosseract-default.sh
cat <<EOF >${GOSSERACT_DEFAULT_PROFILE}
export GOROOT="${BUILD_DIR}/go"
export GOPATH="${HOME}/go"

export PATH="${APT_DESTINATION}/usr/bin:\$GOROOT/bin:\$PATH"
export LD_LIBRARY_PATH="${APT_DESTINATION}/usr/lib/x86_64-linux-gnu:${APT_DESTINATION}/usr/lib/i386-linux-gnu:${APT_DESTINATION}/usr/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="${APT_DESTINATION}/usr/lib/x86_64-linux-gnu:${APT_DESTINATION}/usr/lib/i386-linux-gnu:${APT_DESTINATION}/usr/lib:${APT_DESTINATION}/usr/lib/linux:\$LIBRARY_PATH"
export INCLUDE_PATH="${APT_DESTINATION}/usr/include:${APT_DESTINATION}/usr/include/x86_64-linux-gnu:${APT_DESTINATION}/usr/include/linux:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="${APT_DESTINATION}/usr/lib/x86_64-linux-gnu/pkgconfig:${APT_DESTINATION}/usr/lib/i386-linux-gnu/pkgconfig:${APT_DESTINATION}/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"

export TESSDATA_PREFIX="${APT_DESTINATION}/usr/share/tesseract-ocr/4.00/tessdata"
EOF

source ${GOSSERACT_DEFAULT_PROFILE}

cd ${BUILD_DIR}
wget -nv https://dl.google.com/go/go1.11.5.linux-amd64.tar.gz
tar -zxf ./go1.11.5.linux-amd64.tar.gz
rm ./go1.11.5.linux-amd64.tar.gz
chmod a+x ${GOROOT}/bin/*

find / -name stdio.h

# go get -v -t github.com/otiai10/gosseract
